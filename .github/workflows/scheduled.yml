# All scheduled jobs only run on the master branch. Consequently, any changes
# to this file will not be refelcted in the CI until it is merged to master.
#
# To run the workflow on the develop branch, develop is checked out manually.
name: Scheduled Runs
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - "actions/*"

defaults:
  run:
    shell: bash

jobs:
  Periodic:
    runs-on: docker-fpga
    # This works if the self hosted runners are already logged in
    container:
      image: "artifactory.galois.com:5008/fett-target:ci"
      options: "-u root --privileged"
    strategy:
      fail-fast: false
      matrix:
        cfg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then ref=develop; else ref="${{ github.ref }}"; fi
          echo "ref=$ref" >> $GITHUB_ENV

      - name: Remove lock file if it exists to prevent git fetch failures
        run: find .git -name index.lock -print -exec rm -f {} +
        continue-on-error: true
      - run: sudo apt install -y git-lfs
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          lfs: true
          ref: ${{ env.ref }}
      - run: |
          export PATH=/opt/Xilinx/Vivado/2019.1/bin:/opt/Xilinx/Vivado_Lab/2019.1/bin:$PATH
          . /opt/Xilinx/Vivado_Lab/2019.1/settings64.sh
          eval "$(ssh-agent -s)"
          ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")
          . /home/besspinuser/.nix-profile/etc/profile.d/nix.sh
          nix-shell --command "./ci/fett-ci.py runPeriodic -ep OnPrem -art periodic-${{ github.sha }} -i ${{ matrix.cfg }}
        env:
          HOME: /home/besspinuser
      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: periodic-${{ github.sha }}
          path: "*-periodic-${{ github.sha }}"

  Release:
    if: "!always()"
    runs-on: docker-fpga
    # This works if the self hosted runners are already logged in
    container:
      image: "artifactory.galois.com:5008/fett-target:ci"
      options: "-u root --privileged"
    strategy:
      fail-fast: false
      matrix:
        cfg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then ref=develop; else ref="${{ github.ref }}"; fi
          echo "ref=$ref" >> $GITHUB_ENV

      - name: Remove lock file if it exists to prevent git fetch failures
        run: find .git -name index.lock -print -exec rm -f {} +
        continue-on-error: true
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          lfs: true
          ref: ${{ env.ref }}
      - run: |
          export PATH=/opt/Xilinx/Vivado/2019.1/bin:/opt/Xilinx/Vivado_Lab/2019.1/bin:$PATH
          . /opt/Xilinx/Vivado_Lab/2019.1/settings64.sh
          eval "$(ssh-agent -s)"
          ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")
          . /home/besspinuser/.nix-profile/etc/profile.d/nix.sh
          nix-shell --command "./ci/fett-ci.py runRelease -ep OnPrem -art release-${{ github.sha }} -i ${{ matrix.cfg }}
        env:
          HOME: /home/besspinuser
      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ github.sha }}
          path: "*-release-${{ github.sha }}"
